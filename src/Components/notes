const storedTodos = 'todoApp.todos'

 function Todo() {
  const [todos, setTodos] = useState([])
  const todoNameRef = useRef()

  useEffect(() => {
    const storedTodos = JSON.parse(localStorage.getItem(storedTodos))
    if (storedTodos) setTodos(storedTodos)
  }, [])

  useEffect(() => {
    localStorage.setItem(storedTodos, JSON.stringify(todos))
  }, [todos])

  function toggleTodo(id) {
    const newTodos = [...todos]
    const todo = newTodos.find(todo => todo.id === id)
    todo.complete = !todo.complete
    setTodos(newTodos)
  }

  function handleAddTodo(e) {
    const name = todoNameRef.current.value
    if (name === '') return
    setTodos(prevTodos => {
      return [...prevTodos, { name: name, complete: false}]
    })
    todoNameRef.current.value = null
  }

  function handleClearTodos() {
    const newTodos = todos.filter(todo => !todo.complete)
    setTodos(newTodos)
  }




  <Form>
      <Form.Group md>
                <FloatingLabel controlId="floatingInputGrid" label="To-do item">
                <Form.Control ref={todoNameRef} type="text" placeholder="Something that should be done..." />
                </FloatingLabel>
            </Form.Group>
            <Form.Group md>
                <FloatingLabel controlId="floatingSelectGrid" label="Urgency">
                <Form.Select aria-label="Floating label select example">
                    <option>---</option>
                    <option value="1">High</option>
                    <option value="2">Mid</option>
                    <option value="3">Low</option>
                </Form.Select>
                </FloatingLabel>
            </Form.Group>
            <Button onClick={handleAddTodo}>Add to list</Button>{' '}
            <Button onClick={handleClearTodos}>Complete</Button>{' '}
            <Button variant="secondary">Remove from list</Button>{' '}
    </Form>
    <div>{todos.filter(todo => !todo.complete).length} tasks to be completed.</div>